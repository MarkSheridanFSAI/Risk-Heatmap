library(shiny)
library(shinyalert)
library(ggplot2)
library(dplyr)
library(DT)
# Get a list of currently loaded packages
loaded_packages <- sessionInfo()$otherPkgs
# Get the names of the loaded packages
loaded_package_names <- names(loaded_packages)
# Display the loaded packages and their dependencies
list_packages <- lapply(loaded_package_names, function(pkg) {
# Get dependencies for each loaded package
dependencies <- tools::package_dependencies(pkg, recursive = TRUE)$pkg
# Return a list containing the package and its dependencies
list(Package = pkg, Dependencies = dependencies)
})
# Print the list of packages and dependencies
print(list_packages)
.libPaths()
library(shiny); runApp('Risk-Heatmap.R')
library(shiny)
library(shinyalert)
library(ggplot2)
library(dplyr)
library(DT)
# Load necessary package to access package dependencies
if (!requireNamespace("tools")) install.packages("tools")
# Get a list of currently loaded packages
loaded_packages <- sessionInfo()$otherPkgs
# Get the names of the loaded packages
loaded_package_names <- names(loaded_packages)
# Find and list dependencies of each loaded package
list_packages_with_dependencies <- lapply(loaded_package_names, function(pkg) {
# Get dependencies for each loaded package recursively
dependencies <- tools::package_dependencies(pkg, recursive = TRUE)$pkg
# Return a named list of the package and its dependencies
list(Package = pkg, Dependencies = dependencies)
})
# Print the list of packages and their dependencies
list_packages_with_dependencies
# Ensure tools package is available
if (!requireNamespace("tools")) install.packages("tools")
# Get names of currently loaded packages
loaded_package_names <- names(sessionInfo()$otherPkgs)
# Find dependencies for each loaded package, including all nested dependencies
all_dependencies <- unique(unlist(
tools::package_dependencies(loaded_package_names, db = installed.packages(), recursive = TRUE)
))
# Combine loaded packages and their dependencies, removing duplicates
all_relevant_packages <- unique(c(loaded_package_names, all_dependencies))
# Display list of all loaded packages and their dependencies
all_relevant_packages
library(shiny); runApp('Risk-Heatmap.R')
runApp('Risk-Heatmap.R')
runApp('Risk-Heatmap.R')
runApp('Risk-Heatmap.R')
runApp('Risk-Heatmap.R')
runApp('Risk-Heatmap.R')
getwd()
shiny::runApp("Risk-Heatmap.R",host = "0.0.0.0", port= 3838)
shiny::runApp("Risk-Heatmap.R",host = "::", port= 3838)
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='headline-grabber', token='C058517295C62C438DDC7B16D90BD5F8', secret='P3XpMpcOP3mVrF9hVg4ZvWqBBKJ3pMrkbVRdqm79')
rsconnect::deployApp('Risk-Heatmap.R')
getwd()
rsconnect::deployApp("Risk-Heatmap.R")
rsconnect::deployApp("C:/Users/Admin/OneDrive/Documents/GitHub/Risk-Heatmap/Risk-Heatmap.R")
rsconnect::deployApp(getwd())
rsconnect::setAccountInfo(name='headline-grabber', token='C058517295C62C438DDC7B16D90BD5F8', secret='P3XpMpcOP3mVrF9hVg4ZvWqBBKJ3pMrkbVRdqm79')
library(rsconnect)
rsconnect::setAccountInfo(name='headline-grabber',
token='C058517295C62C438DDC7B16D90BD5F8',
secret='P3XpMpcOP3mVrF9hVg4ZvWqBBKJ3pMrkbVRdqm79')
library(shiny); runApp('Risk-Heatmap.R')
runApp('Risk-Heatmap.R')
runApp('Risk-Heatmap.R')
runApp('Risk-Heatmap.R')
